package com.database.action;

import java.util.List;

import com.database.common.DataUtil;
import com.database.common.StringUtil;

public class InitView {
	public static String newline = "\r\n";
	public static String lable = "\t";
	public static String initView(String className){
		className=StringUtil.getClassName(className);
		List<String> objdto=DataUtil.objdto;
		List<String> objdtoComments=DataUtil.objdtoComments;
		int size=objdto.size();
		StringBuffer buffer= new StringBuffer();
	    buffer.append("Ext.define(\"app.view."+className.toLowerCase()+"."+className+"\", {");
        buffer.append(newline);
        buffer.append(lable+"extend:'Ext.grid.Panel',");
        buffer.append(newline);
        buffer.append(lable+"xtype : '"+className.toLowerCase()+"panel',");
        buffer.append(newline);
        buffer.append(lable+"forceFit : true,");
        buffer.append(newline);
        buffer.append(lable+"viewConfig:{");
        buffer.append(newline);
        buffer.append(lable+lable+"stripeRows: true,");
        buffer.append(newline);
        buffer.append(lable+lable+"enableTextSelection: true,");
        buffer.append(newline);
        buffer.append(lable+"},");
        buffer.append(newline);
        buffer.append(lable+"store: Ext.create('app.store."+className+"Store'),");
        buffer.append(newline);
        buffer.append(lable+"reference: '"+className.toLowerCase()+"Grid',");
        buffer.append(newline);
        buffer.append(lable+"requires: [");
        buffer.append(newline);
        buffer.append(lable+lable+"'app.controller."+className.toLowerCase()+"."+className+"Controller'");
        buffer.append(newline);
        buffer.append(lable+"],");
        buffer.append(newline);
        buffer.append(lable+"controller: '"+className.toLowerCase()+"controller',");
        buffer.append(newline);
        buffer.append(lable+"initComponent : function(){");
        buffer.append(newline);
        buffer.append(lable+lable+"Ext.apply(this,{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+" columns :[");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"{header:'', xtype : 'rownumberer'},");
        buffer.append(newline);
        for (int i = 0; i < size; i++) {
        	 if(i==size-1){
        		 buffer.append(lable+lable+lable+"{header:'"+objdtoComments.get(i)+"', align : 'left', dataIndex: '"+StringUtil.DealFiled(objdto.get(i))+"'}");
                 buffer.append(newline); 
        	 }else{
        		 buffer.append(lable+lable+lable+"{header:'"+objdtoComments.get(i)+"', align : 'left', dataIndex: '"+StringUtil.DealFiled(objdto.get(i))+"'},");
                 buffer.append(newline); 
        	 }
		}
        buffer.append(lable+lable+lable+"],");
        buffer.append(newline);
        buffer.append(lable+lable+"bbar: Ext.create('app.view.common.CommonPaggingTool', {");
        buffer.append(newline);
        buffer.append(lable+lable+lable+" store: this.store");
        buffer.append(newline);
        buffer.append(lable+lable+"}),");
        buffer.append(newline);
        buffer.append(lable+lable+"dockedItems:[");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"xtype:'toolbar',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"items:[");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"style: 'margin-left:10px',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"xtype: 'textfield',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"name: 'searchField',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"emptyText:'模糊查询',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"width: 200,");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"listeners:{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+lable+"change:{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+lable+"scope: this,");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+lable+"fn: this.textSearch,");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+lable+"buffer: 500");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+lable+"}");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"}");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"},");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"glyph : 0xf002,");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"xtype : 'button',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"style: 'margin-left: -9px;'");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"}]");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"},");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"xtype:'toolbar',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"dock:'top',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"items:[");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"text  : '新增',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"glyph : 0xf016,");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"xtype : 'button',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"style: 'margin-left:10px',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"handler : 'insert"+className+"'");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"},");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"{");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"text  : '修改',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"glyph : 0xf0f6,");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"xtype : 'button',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"style: 'margin-left:10px',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"handler : 'update"+className+"',");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"bind: {");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+lable+"disabled: '{!"+className.toLowerCase()+"Grid.selection}'");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+lable+"}");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"}");
        buffer.append(newline);
        buffer.append(lable+lable+lable+lable+"]");
        buffer.append(newline);
        buffer.append(lable+lable+lable+"}]");
        buffer.append(newline);
        buffer.append(lable+lable+"});");
        buffer.append(newline);
        buffer.append(lable+"this.store.load();");
        buffer.append(newline);
        buffer.append(lable+"this.callParent(arguments);");
        buffer.append(newline);
        buffer.append(lable+"}");
        buffer.append(newline);
        buffer.append("});");
        buffer.append(newline);
		return buffer.toString();
	}
}
